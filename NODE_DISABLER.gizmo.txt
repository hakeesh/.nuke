set cut_paste_input [stack 0]
version 12.1 v2
push $cut_paste_input
NoOp {
 name NODE_DISABLER
 knobChanged disableNodesInList()
 tile_color 0xff000000
 gl_color 0xffffffff
 label "\[expr \{ \[value disable] == true ? \"Nodes Disabled\" : \"Nodes Enabled\" \}] "
 selected true
 xpos 237
 ypos -116
 addUserKnob {20 User}
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {22 addNodes l "Add selected nodes to list" +HIDDEN T "# --------  addNodes BUTTON  ------------\n\n# Set Initial List\nnode_list = \[]\n\n\nfor i in nuke.selectedNodes():\n    node_list.append(i.name())\n\n# Hide the start knob & show the add more knob\nnuke.thisNode().knob('addMoreNodes').setVisible(True)\nnuke.thisNode().knob('addNodes').setVisible(False)\n\nprint node_list\n\n# Turn the list into a single string, and add\n# a line break, a bullet point and a space in between each item.\nnode_list_cleaned = '\\n• '.join(node_list)\n\n# Set the value of the text knob.\nnuke.thisNode()\['txtknob_node_list'].setValue(\"\\n• \"+node_list_cleaned)\n\n\n# Define function for knobChanged.\ndef disableNodesInList():\n\n    # Loop through all the nodes in node_list.\n    for i in node_list:\n\n        # Check if the node has a disable knob.\n        if nuke.toNode(i).knob('disable'):\n\n            # If it does, set its disable knob to the value of NODE_DISABLER's disable knob\n            nuke.toNode(i).knob('disable').setValue(nuke.thisNode().knob('disable').value())\n\n        # If the node does NOT have a disable knob, print an error message in the Script Editor.\n        else:\n            print \" - \"+i+\" does not have a 'disable' knob. Ignoring...\"\n\n\n# Add the knobChanged callback to NODE_DISABLER.\nnuke.toNode('NODE_DISABLER').knob('knobChanged').setValue('disableNodesInList()')" +STARTLINE}
 addUserKnob {22 addMoreNodes l "Add more selected nodes to list" T "# --------  addMoreNodes BUTTON  ------------\n\n# Loop through selected nodes.\nfor i in nuke.selectedNodes():\n\n    # Check if the selected node is already in node_list.\n    if i.name() in node_list:\n\n        # If it is, print a message to the Script Editor.\n        print i.name()+\" is already in the list.\"\n\n    # But if it isn't in node_list, add it!\n    else:\n        node_list.append(i.name())\n\nprint node_list\n\n# Turn the list into a single string, and add\n# a line break, a bullet point and a space in between each item.\nnode_list_cleaned = '\\n• '.join(node_list)\n\n# Set the value of the text knob.\nnuke.thisNode()\['txtknob_node_list'].setValue(\"\\n• \"+node_list_cleaned)" +STARTLINE}
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {22 clearList l "Clear List" T "# --------  clearList BUTTON  ------------\n\n# Clear Nodes\nnode_list = \[]\n\n# Reset button visibility\nnuke.thisNode().knob('addNodes').setVisible(True)\nnuke.thisNode().knob('addMoreNodes').setVisible(False)\n\n# Reset the NODE LIST: text knob to be \"None\"\nnuke.thisNode()\['txtknob_node_list'].setValue(\"None\")" +STARTLINE}
 addUserKnob {26 spacer l "" -STARTLINE T "    "}
 addUserKnob {6 disable -STARTLINE}
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {26 txtknob_node_list l "Node List:" T "\n• Transform1\n• Grade1\n• Roto1"}
 addUserKnob {26 "" +STARTLINE}
}
